# Imported from https://raw.githubusercontent.com/hetznercloud/csi-driver/v1.6.0/deploy/kubernetes/hcloud-csi.yml
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.hetzner.cloud
spec:
  attachRequired: true
  podInfoOnMount: true
  volumeLifecycleModes:
    - Persistent
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: hcloud-volumes
  annotations:
    storageclass.kubernetes.io/is-default-class: "{{.Values.defaultStorageClass}}"
provisioner: csi.hetzner.cloud
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: hcloud-csi
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hcloud-csi
rules:
  # attacher
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["csi.storage.k8s.io"]
    resources: ["csinodeinfos"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["volumeattachments/status"]
    verbs: ["patch"]
  # provisioner
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete", "patch"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims", "persistentvolumeclaims/status"]
    verbs: ["get", "list", "watch", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["get", "list"]
  # For HA setups.
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get","create", "list", "update"]
  # resizer
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hcloud-csi
subjects:
  - kind: ServiceAccount
    name: hcloud-csi
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: hcloud-csi
  apiGroup: rbac.authorization.k8s.io
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hcloud-csi-controller
spec:
  selector:
    matchLabels:
      app: hcloud-csi-controller
  replicas: 1
  template:
    metadata:
      labels:
        app: hcloud-csi-controller
    spec:
      serviceAccountName: hcloud-csi
      priorityClassName: system-node-critical
      tolerations:
        - operator: Exists
      containers:
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.2.1
          args:
            - --v=4
            - --leader-election
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
            limits:
              memory: 50Mi
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.2.0
          args:
            - --v=4
            - --leader-election
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
            limits:
              memory: 50Mi
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.2
          args:
            - --feature-gates=Topology=true
            - --v=4
            - --leader-election
            - --default-fstype=ext4
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
            limits:
              memory: 50Mi
        - name: hcloud-csi-driver
          image: hetznercloud/hcloud-csi-driver:{{ .Chart.AppVersion }}
          imagePullPolicy: Always
          env:
            - name: CSI_ENDPOINT
              value: unix:///run/csi/socket
            - name: METRICS_ENDPOINT
              value: 0.0.0.0:9189
            - name: LOG_LEVEL
              value: info
            - name: ENABLE_METRICS
              value: "true"
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: HCLOUD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hcloud-csi
                  key: token
          volumeMounts:
            - name: socket-dir
              mountPath: /run/csi
          ports:
            - containerPort: 9189
              name: metrics
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
            allowPrivilegeEscalation: true
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
            limits:
              memory: 50Mi
        - name: liveness-probe
          imagePullPolicy: Always
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.3.0
          args:
            - --v=4
          volumeMounts:
            - mountPath: /run/csi
              name: socket-dir
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
            limits:
              memory: 50Mi
      volumes:
        - name: socket-dir
          emptyDir: {}
---
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: hcloud-csi-node
  labels:
    app: hcloud-csi
spec:
  selector:
    matchLabels:
      app: hcloud-csi
  template:
    metadata:
      labels:
        app: hcloud-csi
    spec:
      priorityClassName: system-cluster-critical
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - key: CriticalAddonsOnly
          operator: Exists
      serviceAccount: hcloud-csi-node
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: "instance.hetzner.cloud/is-root-server"
                    operator: NotIn
                    values:
                      - "true"
      containers:
        - name: csi-node-driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.2.0
          args:
            - --v=5
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.hetzner.cloud/socket
          env:
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: plugin-dir
              mountPath: /run/csi
            - name: registration-dir
              mountPath: /registration
          securityContext:
            privileged: true
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
            limits:
              memory: 50Mi
        - name: hcloud-csi-driver
          image: hetznercloud/hcloud-csi-driver:{{ .Chart.AppVersion }}
          imagePullPolicy: Always
          env:
            - name: CSI_ENDPOINT
              value: unix:///run/csi/socket
            - name: METRICS_ENDPOINT
              value: 0.0.0.0:9189
            - name: LOG_LEVEL
              value: info
            - name: ENABLE_METRICS
              value: "true"
            - name: HCLOUD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: hcloud-csi
                  key: token
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: kubelet-dir
              mountPath: /var/lib/kubelet
              mountPropagation: "Bidirectional"
            - name: plugin-dir
              mountPath: /run/csi
            - name: device-dir
              mountPath: /dev
          securityContext:
            privileged: true
          ports:
            - containerPort: 9189
              name: metrics
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            timeoutSeconds: 3
            periodSeconds: 2
          resources:
            requests:
              cpu: 5m
              memory: 10Mi
            limits:
              memory: 50Mi
        - name: liveness-probe
          imagePullPolicy: Always
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.3.0
          args:
            - --v=4
          volumeMounts:
            - mountPath: /run/csi
              name: plugin-dir
          resources:
            requests:
              cpu: 5m
              memory: 20Mi
            limits:
              memory: 50Mi
      volumes:
        - name: kubelet-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: plugin-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.hetzner.cloud/
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
            type: Directory
---
apiVersion: v1
kind: Service
metadata:
  name: hcloud-csi-controller-metrics
  labels:
    app: hcloud-csi-controller
spec:
  selector:
    app: hcloud-csi-controller
  ports:
    - port: 9189
      name: metrics
      targetPort: metrics

---
apiVersion: v1
kind: Service
metadata:
  name: hcloud-csi-node-metrics
  labels:
    app: hcloud-csi
spec:
  selector:
    app: hcloud-csi
  ports:
    - port: 9189
      name: metrics
      targetPort: metrics
{{- if .Values.prometheus.serviceMonitor.enabled }}
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hcloud-csi-controller
spec:
  endpoints:
  - port: metrics
  namespaceSelector:
    matchNames:
    - {{.Release.Namespace}}
  selector:
    matchLabels:
      app: hcloud-csi-controller
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hcloud-csi-node
spec:
  endpoints:
  - port: metrics
  namespaceSelector:
    matchNames:
    - {{.Release.Namespace}}
  selector:
    matchLabels:
      app: hcloud-csi
{{- end }}
